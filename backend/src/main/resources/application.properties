spring.application.name=backend
server.port=8089
app.frontend.base-url=${FRONTEND_URL};

#datasource
spring.jpa.hibernate.ddl-auto=validate
spring.datasource.url=jdbc:postgresql://localhost:5432/cloth_shop_db
spring.jpa.database=postgresql
spring.datasource.username=postgres
spring.datasource.password=abc123!@#
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.datasource.driver-class-name=org.postgresql.Driver
spring.flyway.enabled=true

logging.level.org.springframework.security=DEBUG
#connectionpool
spring.datasource.hikari.pool-name=RestDB-Pool
spring.datasource.hikari.maximum-pool-size=5
spring.datasource.hikari.data-source-properties.cachePrepStmts=true
spring.datasource.hikari.data-source-properties.prepStmtCacheSize=250
spring.datasource.hikari.data-source-properties.prepStmtCacheSqlLimit=2048
spring.datasource.hikari.data-source-properties.useServerPrepStmts=true
spring.datasource.hikari.data-source-properties.useLocalSessionState=true
spring.datasource.hikari.data-source-properties.rewriteBatchedStatements=true
spring.datasource.hikari.data-source-properties.cacheResultSetMetadata=true
spring.datasource.hikari.data-source-properties.cacheServerConfiguration=true
spring.datasource.hikari.data-source-properties.elideSetAutoCommits=true
spring.datasource.hikari.data-source-properties.maintainTimeStats=false



#Show SQL
spring.jpa.properties.hibernate.show_sql=true

#Format SQL
spring.jpa.properties.hibernate.format_sql=true

#Show bind values
logging.level.org.hibernate.orm.jdbc.bind=trace

#email
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=nhthanh2k4@gmail.com
spring.mail.password=uavfydhlqrjdcpzd
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

#Oauth2
app.oauth2.provider=google,facebook
#google
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:8089/login/oauth2/code/{registrationId}
spring.security.oauth2.client.registration.google.scope=openid, profile, email
#github
spring.security.oauth2.client.registration.facebook.client-id=${FACEBOOK_CLIENT_ID}
spring.security.oauth2.client.registration.facebook.client-secret=${FACEBOOK_CLIENT_SECRET}
spring.security.oauth2.client.registration.facebook.client-name=Facebook
spring.security.oauth2.client.registration.facebook.redirect-uri=${BASE_URL}/login/oauth2/code/{registrationId}
spring.security.oauth2.client.registration.facebook.scope=public_profile,email
spring.security.oauth2.client.provider.facebook.authorization-uri=https://www.facebook.com/v16.0/dialog/oauth
spring.security.oauth2.client.provider.facebook.token-uri=https://graph.facebook.com/v16.0/oauth/access_token
spring.security.oauth2.client.provider.facebook.user-info-uri=https://graph.facebook.com/me?fields=id,name,email,picture.width(200).height(200)
spring.security.oauth2.client.provider.facebook.user-name-attribute=id
# ===== OpenAPI / Swagger =====
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.path=/swagger-ui
springdoc.default-consumes-media-type=application/json
springdoc.default-produces-media-type=application/json

#flyway
spring.flyway.baseline-on-migrate=true
spring.flyway.baseline-version=1

spring.devtools.restart.enabled=false

#Jwt
app.jwt.issuer=NULL
app.jwt.alg=HS512
app.jwt.secret=${JWT_SECRET_KEY}
app.jwt.ttlSeconds.ACCESS=900
app.jwt.ttlSeconds.REFRESH=604800
app.jwt.ttlSeconds.RESET_PASSWORD=1800
app.jwt.ttlSeconds.VERIFY_EMAIL=86400
app.jwt.ttlSeconds.OAUTH_STATE=300

#cloudnary
cloudinary.cloud-name=Root
cloudinary.api-key=824272919399967
cloudinary.api-secret=ZkbCvqFf0EwVdUsDDAHnBbYedzs
cloudinary.upload-url=https://api.cloudinary.com/v1_1/${cloudinary.cloud-name}/image/upload
#image
upload.type.avatar.folder-pattern=users/%s/avatar
upload.type.avatar.max-size=2000000
upload.type.avatar.allowed-formats=jpg,png.webp
upload.type.avatar.transformations=c_limit,w_400

upload.type.product.folder-pattern=products/%s/images
upload.type.product.max-size=10000000
upload.type.product.allowed-formats=jpg,png,webp
upload.type.product.transformations=c_limit,w_1200

upload.type.banner.folder-pattern=banners/%s
upload.type.banner.max-size=8000000
upload.type.banner.allowed-formats=jpg,webp
upload.type.banner.transformations=c_limit,w_1600

#//redis
spring.data.redis.host=redis-host
spring.data.redis.port=6379
spring.cache.type=redis